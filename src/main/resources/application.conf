application {

  data-base {
    url = "jdbc:h2:mem:service;DB_CLOSE_DELAY=-1"
    driver = "org.h2.Driver"
    user = ""
    pass = ""
    connection-pool = "disabled"
    keep-alive-connection = "true"
    dialect = "org.hibernate.dialect.H2Dialect"
    hikari {
      connection-timeout = 20000
      minimum-idle = 10
      maximum-pool-size = 10
      idle-timeout = 300000
      auto-commit = false

    }
  }

}

akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-config-on-start = off

  actor {

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }

    blocking-io-dispatcher {
      type = "Dispatcher"
      executor = "thread-pool-executor"
      throughput = 1

      thread-pool-executor {
        fixed-pool-size = 16
      }
    }

    deployment {


    }

    debug {
      # enable DEBUG logging of unhandled messages
      unhandled = on
    }
  }

}